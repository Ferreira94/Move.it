{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luciano/Documentos/Projetos/moveit-next/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useState } from 'react';\nimport challenges from '../../challenges.json';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      startNewChallenge,\n      levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/luciano/Documentos/Projetos/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","levelUp","startNewChallenge","randomChallengeIndex","Math","floor","random","length","challenge"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAcA,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASI,kBAAT,CAA4B;AAACC,EAAAA;AAAD,CAA5B,EAAiE;AACtE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,iBAAD;AAAA,OAAoBC;AAApB,MAA4CR,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACS,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDV,QAAQ,CAAC,CAAD,CAA9D;;AAEA,WAASW,OAAT,GAAmB;AACjBL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASO,iBAAT,GAA6B;AAC3B,UAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBf,UAAU,CAACgB,MAAtC,CAA7B;AACA,UAAMC,SAAS,GAAGjB,UAAU,CAACY,oBAAD,CAA5B;AACD;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,KADK;AAELE,MAAAA,iBAFK;AAGLE,MAAAA,mBAHK;AAILG,MAAAA,iBAJK;AAKLD,MAAAA;AALK,KADT;AAAA,cAQGP;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD","sourcesContent":["import { createContext, useState, ReactNode } from 'react';\nimport challenges from '../../challenges.json';\n\ninterface ChallengesContentData {\n  level: number;\n  currentExperience: number;\n  challengesCompleted: number;\n  startNewChallenge: () => void;\n  levelUp: () => void;\n}\n\ninterface ChallengesProviderProps {\n  children: ReactNode;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContentData);\n\nexport function ChallengesProvider({children}: ChallengesProviderProps) {\n  const [level, setLevel] = useState(1);\n  const [currentExperience, setCurrentExperience] = useState(0);\n  const [challengesCompleted, setChallengesCompleted] = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n  }\n\n  return (\n    <ChallengesContext.Provider \n      value={{ \n        level, \n        currentExperience, \n        challengesCompleted, \n        startNewChallenge,\n        levelUp \n      }}>\n      {children}\n    </ChallengesContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}